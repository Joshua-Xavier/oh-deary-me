#!/bin/bash

#author: JOSH NELSSON-SMITH

# dear takes between 2 and 3 arguments depending on whether a flag is provided
if [ $# -eq 2 ]; then
    NOFLAG=1
    OUTFILE=$1
    INDIR=$2
elif [ $# -eq 3 ]; then
    NOFLAG=0
    FLAG=$1
    OUTFILE=$2
    INDIR=$3
else 
    echo "You gave me an incorrect number of args"
    exit 1
fi

# we must check whether the provided file to compress is actually a directory
if [ -d "${INDIR}" ]; then
    echo "Detected ${INDIR} as a directory"

    # we do not want to overwrite the original indir, so we copy it to outdir to use
    cp -R ${INDIR} ${OUTFILE} 

    # here we use find to list all the file paths, then pipe it into findDuplicates to process the duplicates
    find -f ${OUTFILE} | ./src/findDuplicates.pl ${OUTFILE} 
else
    echo "${INDIR} is not a directory"
    rm -rf ${OUTFILE} # program has failed so we don't want to 
    exit 1
fi

# if the noflag flag is set to 0, then we are expecting a flag and process it as below
if [ ${NOFLAG} -eq 0 ]; then
    case "${FLAG}" in
        -g)
            echo "g flag detected: compressing with gzip"
            tar -zcf $OUTFILE.tar.gz $OUTFILE
            rm -rf ${OUTFILE}
            exit 0
            ;;
        -b)
            echo "b flag detected: compressing with bzip2"
            tar -jcf $OUTFILE.tar.bz2 $OUTFILE
            rm -rf ${OUTFILE}
            exit 0
            ;;
        -c)
            echo "c flag detected: compressing with compress"
            tar -cf $OUTFILE.tar $OUTFILE
            compress -f $OUTFILE.tar #no need to apprend .Z, it is automatically appended
            rm -rf $OUTFILE.tar
            rm -rf ${OUTFILE}
            exit 0
            ;; 
        *)
            echo "Unsupported flag detected"
            rm -rf ${OUTFILE}
            exit 1
            ;;
    esac
# there is no flag so we just archive into a tar file
else 
    echo "handling no flags: leaving file as tar"
    tar -cvf ${OUTFILE}.tar ${OUTFILE}
    exit 0
fi
    